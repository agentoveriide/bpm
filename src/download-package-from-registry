#!/usr/bin/env bash

# Downloads a package from the package registry.
#
# $1 - Library directory for installation.
# $2 - Package name.
# $3 - Package version specifier.
#
# Returns true (0) on success. Returns 1 if there is a strange filesystem
# error (can't copy, can't make directory). Returns 2 when the files can't be
# downloaded. Returns 3 if there is no download URL in the package's
# descriptor.
bpm::downloadPackageFromRegistry() {
    local definitionPrefix dest iniData url

    # Download INI from website
    log::debug "Loading package information from registry: $2"
    iniData=$(bpm::getUrl "https://rawgit.com/bpm-rocks/registry/master/packages/$2.ini" || :)

    if [[ -z "$iniData" ]]; then
        log::error "Unable to download package information from registry. Package not found."

        return 3
    fi

    # Parse INI, get download URL to .tar.gz
    ini::prefix definitionPrefix
    ini::parse "$definitionPrefix" "$iniData"
    ini::get url "$definitionPrefix" "$2" downloadUrl

    if [[ -z "$url" ]]; then
        log::error "No 'downloadUrl' property in package's information."

        return 3
    fi

    dest="$1/$2"
    mkdir -p "$dest" || return 1
    log::debug "Downloading: $url"
    bpm::getUrl "$url" > "$dest/.bpm-archive"
    bpm::expandArchive "$dest" ".bpm-archive"
    rm "$dest/.bpm-archive" || return 1
    bpm::fixPackageNesting "$dest"
}
